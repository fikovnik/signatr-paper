@misc{state-of-octoverse-2021,
  title={State of the {Octoverse}},
  author={{GitHub}},
  year={2021},
  note={See \url{https://octoverse.github.com/\#top-languages-over-the-years}.}
}

@inproceedings{richards2011eval,
  title={The eval that men do},
  author={Richards, Gregor and Hammer, Christian and Burg, Brian and Vitek, Jan},
  booktitle={European Conference on Object-Oriented Programming},
  pages={52--78},
  year={2011},
  organization={Springer}
}

@inproceedings{quickcheck,
author = {Claessen, Koen and Hughes, John},
title = {QuickCheck: A Lightweight Tool for Random Testing of Haskell Programs},
year = {2000},
isbn = {1581132026},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/351240.351266},
doi = {10.1145/351240.351266},
booktitle = {Proceedings of the Fifth ACM SIGPLAN International Conference on Functional Programming},
pages = {268â€“279},
numpages = {12},
series = {ICFP '00}
}



@inproceedings{rastogi2015safe,
  title={Safe \& efficient gradual typing for TypeScript},
  author={Rastogi, Aseem and Swamy, Nikhil and Fournet, C{\'e}dric and Bierman, Gavin and Vekris, Panagiotis},
  booktitle={Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages={167--180},
  year={2015}
}

@inproceedings{pacheco2007randoop,
  title={Randoop: feedback-directed random testing for Java},
  author={Pacheco, Carlos and Ernst, Michael D},
  booktitle={Companion to the 22nd ACM SIGPLAN conference on Object-oriented programming systems and applications companion},
  pages={815--816},
  year={2007}
}

@article{lambdatester,
    author = {Selakovic, Marija and Pradel, Michael and Karim, Rezwana and Tip, Frank},
    title = {Test Generation for Higher-Order Functions in Dynamic Languages},
    year = {2018},
    issue_date = {November 2018},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {2},
    number = {OOPSLA},
    url = {https://doi.org/10.1145/3276531},
    doi = {10.1145/3276531},
    journal = {Proc. ACM Program. Lang.},
    month = {oct},
    articleno = {161},
    numpages = {27},
    keywords = {Higher-order functions, JavaScript, differential testing, dynamic analysis}
}

@inproceedings{arteca2022nessie,
  title={Nessie: Automatically Testing JavaScript APIs with Asynchronous Callbacks},
  author={Arteca, Ellen and Harner, Sebastian and Pradel, Michael and Tip, Frank},
  year={2022},
  organization={ICSE}
}

@article{turcotte2020designing,
  title={Designing types for R, empirically},
  author={Turcotte, Alexi and Goel, Aviral and K{\v{r}}ikava, Filip and Vitek, Jan},
  journal={Proceedings of the ACM on Programming Languages},
  volume={4},
  number={OOPSLA},
  pages={1--25},
  year={2020},
  publisher={ACM New York, NY, USA}
}

@article{yang2022complex,
  title={Complex Python Features in the Wild},
  author={Yang, Yi and Milanova, Ana and Hirzel, Martin},
  year={2022},
  organization={MSR}
}

@InProceedings{morandat2012evaluating,
    author="Morandat, Flor{\'e}al
    and Hill, Brandon
    and Osvald, Leo
    and Vitek, Jan",
    editor="Noble, James",
    title="Evaluating the Design of the R Language",
    booktitle="ECOOP 2012 -- Object-Oriented Programming",
    year="2012",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="104--131",
    isbn="978-3-642-31057-7"
}


@article{wei2022free,
  title={Free lunch for testing: Fuzzing deep-learning libraries from open source},
  author={Wei, Anjiang and Deng, Yinlin and Yang, Chenyuan and Zhang, Lingming},
  journal={ICSE},
  year={2022}
}

@inproceedings{andreasen2016trace,
  title={Trace typing: An approach for evaluating retrofitted type systems},
  author={Andreasen, Esben and Gordon, Colin S and Chandra, Satish and Sridharan, Manu and Tip, Frank and Sen, Koushik},
  booktitle={30th European Conference on Object-Oriented Programming (ECOOP 2016)},
  year={2016},
  organization={Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik}
}

@article{tange2011_parallel,
  title={Gnu parallel-the command-line power tool},
  author={Tange, Ole and others},
  journal={The USENIX Magazine},
  volume={36},
  number={1},
  year={2011}
}

@article{landau2021_targets,
  title = {The targets R package: a dynamic Make-like function-oriented pipeline toolkit for reproducibility and high-performance computing},
  author = {William Michael Landau},
  journal = {Journal of Open Source Software},
  year = {2021},
  volume = {6},
  number = {57},
  pages = {2959},
  url = {https://doi.org/10.21105/joss.02959},
}

@article{goel2019,
  author = {Goel, Aviral and Vitek, Jan},
  title = {On the Design, Implementation, and Use of Laziness in R},
  year = {2019},
  issue_date = {October 2019},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {3},
  number = {OOPSLA},
  url = {https://doi.org/10.1145/3360579},
  doi = {10.1145/3360579},
  abstract = {The R programming language has been lazy for over twenty-five years. This paper presents a review of the design and implementation of call-by-need in R, and a data-driven study of how generations of programmers have put laziness to use in their code. We analyze 16,707 packages and observe the creation of 270.9 B promises. Our data suggests that there is little supporting evidence to assert that programmers use laziness to avoid unnecessary computation or to operate over infinite data structures. For the most part R code appears to have been written without reliance on, and in many cases even knowledge of, delayed argument evaluation. The only significant exception is a small number of packages which leverage call-by-need for meta-programming.},
  journal = {Proc. ACM Program. Lang.},
  month = {oct},
  articleno = {153},
  numpages = {27},
  keywords = {R language, delayed or lazy evaluation}
}
